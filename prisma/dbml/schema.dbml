//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Account {
  id String [pk]
  userId String [not null]
  type String [not null]
  provider String [not null]
  providerAccountId String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  sub String
  id_token String
  session_state String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  user User [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table Session {
  id String [pk]
  sessionToken String [unique, not null]
  userId String [not null]
  expires DateTime [not null]
  user User [not null]
}

Table User {
  id String [pk]
  name String
  email String [unique]
  emailVerified DateTime
  username String [unique]
  bio String
  password String
  role UserRole [not null, default: 'USER']
  verificationToken String
  forgotPasswordToken String
  forgotPasswordExpiry DateTime
  image String
  cover String
  createdCommunities Community [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  accounts Account [not null]
  sessions Session [not null]
  Post Post [not null]
  Likes Likes [not null]
  followedBy User [not null]
  following User [not null]
  subscriptions Subscription [not null]
  directMessages DirectMessage [not null]
  conversationsInitiated Conversation [not null]
  conversationsReceived Conversation [not null]
  conversation Conversation [not null]
  reports Reports [not null]
}

Table Post {
  id String [pk]
  text String
  content Json
  author User [not null]
  authorId String [not null]
  createdAt DateTime [default: `now()`, not null]
  likes Likes [not null]
  parentId String
  parent Post
  children Post [not null]
  communityId String
  community Community
  images Images [not null]
  reports Reports [not null]
  deleted Boolean [not null, default: false]
}

Table Reports {
  id String [pk]
  post Post [not null]
  postId String [not null]
  user User [not null]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]
  resolved Boolean [not null, default: false]
}

Table Images {
  id String [pk]
  url String [not null]
  postId String [not null]
  post Post [not null]
}

Table Likes {
  post Post [not null]
  postId String [not null]
  user User [not null]
  userId String [not null]
  createdAt DateTime [default: `now()`, not null]

  indexes {
    (postId, userId) [pk]
  }
}

Table Community {
  id String [pk]
  name String [unique, not null]
  image String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [default: `now()`, not null]
  creatorId String
  creator User
  Post Post [not null]
  Subscription Subscription [not null]
}

Table Subscription {
  user User [not null]
  userId String [not null]
  community Community [not null]
  communityId String [not null]

  indexes {
    (userId, communityId) [pk]
  }
}

Table Conversation {
  id String [pk]
  userOneId String [not null]
  userOne User [not null]
  userTwoId String [not null]
  userTwo User [not null]
  directMessages DirectMessage [not null]
  User User
  userId String

  indexes {
    (userOneId, userTwoId) [unique]
  }
}

Table DirectMessage {
  id String [pk]
  content String [not null]
  fileUrl String
  userId String [not null]
  user User [not null]
  conversationId String [not null]
  conversation Conversation [not null]
  deleted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
}

Enum UserRole {
  USER
  ADMIN
  MODERATOR
  BANNED
}

Ref: Account.userId > User.id [delete: Cascade]

Ref: Session.userId > User.id [delete: Cascade]

Ref: Post.authorId > User.id

Ref: Post.parentId - Post.id [delete: No Action]

Ref: Post.communityId > Community.id

Ref: Reports.postId > Post.id [delete: Cascade]

Ref: Reports.userId > User.id [delete: Cascade]

Ref: Images.postId > Post.id [delete: Cascade]

Ref: Likes.postId > Post.id [delete: Cascade]

Ref: Likes.userId > User.id [delete: Cascade]

Ref: Community.creatorId > User.id

Ref: Subscription.userId > User.id

Ref: Subscription.communityId > Community.id

Ref: Conversation.userOneId > User.id [delete: Cascade]

Ref: Conversation.userTwoId > User.id [delete: Cascade]

Ref: Conversation.userId > User.id [delete: Cascade]

Ref: DirectMessage.userId > User.id [delete: Cascade]

Ref: DirectMessage.conversationId > Conversation.id [delete: Cascade]